(@func fib [(:: n Int)] Int
    (@if (or [(eq-int [n, 0]), (eq-int [n, 1])])
        1
        (add-int [(fib [(sub-int [n, 2])]), (fib [(sub-int [n, 1])])])
    )
)

(@func main [] Unit
    (@let [
        ; Calculate fib(1)
        (= fib1  Int (fib [1])),
        ; Print it
        (= _1 Unit (print-int [fib1])),

        ; Calculate fib(30)
        (= fib30 Int (fib [30])),
        ; Print it
        (= _2 Unit (print-int [fib30]))
    ] Unit)
)